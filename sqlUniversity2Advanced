create database university;
use university;
create table student(std_id int not null,reg_no varchar(20),std_name char(10),std_dept varchar(20),age int,
constraint pk_student primary key(std_id,reg_no),constraint ch_student check(age>=18));
describe student;
insert into student values(1,'DV_0012','jothish','mca',21);
insert into student values(2,'DV_0050','john','mtech',25);
insert into student values(3,'DV_0016','Abhi','mca',22);
insert into student values(4,'DV_00121','Akash','bca',23);
insert into student values(5,'DV_0010','Hari','bcom',20);
insert into student values(6,'DV_0016','Manu','mtech',24);
insert into student values(7,'DV_0002','amal','bcom',19);
describe student;
select * from student;
alter table student rename column std_dept to branch;
select std_name,branch from student;
select * from student where std_id between 2 and 5;
select * from student where branch in('mca','bca');
select * from student where std_id>2 and std_id<5;
select distinct branch from student;
create table teachers(id int not null auto_increment,t_name char(10), dept_name varchar(20),course_id varchar(20),
semester varchar(8),primary key(id));
show columns from teachers;
insert into teachers(t_name,dept_name,course_id,semester)values('keerthy','CS','CS_01','4');
insert into teachers(t_name,dept_name,course_id,semester)values('priya','EEE','EEE_04','2');
alter table teachers auto_increment=101;
insert into teachers(t_name,dept_name,course_id,semester)values('anu','CS','CS_01','4');
insert into teachers(t_name,dept_name,course_id,semester)values('shama','CS','CS_011','6');
drop table teachers;
select * from teachers;
alter table teachers add phn_no int;
select * from teachers;
alter table teachers drop column phn_no;
drop table teachers;
create table marks(std_id int not null,std_name char(10), dept_name varchar(20),mark int,grade char(10));
describe marks;
insert into marks values(5,'hari','bcom',57,'c');
insert into marks values(4,'akash','bca',37,'d');
insert into marks values(3,'abhii','mca',77,'b');
select count(std_id) from marks;
alter table marks add foreign key(std_id) references student(std_id);
create view std_details as select std_name,dept_name from marks;
select * from std_details;
select grade,mark from marks;
select * from marks;
describe marks;
select * from marks order by std_name;
select * from student order by branch; 
update teachers set dept_name='mathematics',course_id ='Math_05',semester='5'where id=1 ;
select * from teachers;
select * from teachers order by t_name desc;
delete from student where std_id=1;
select * from student;
select avg(age) from student;
select min(age) as smallest from student;
select max(age) as maximum_age from student;
select count(std_name) from marks;
select count(id),dept_name from teachers group by dept_name;
select count(std_id),branch from student group by branch;
